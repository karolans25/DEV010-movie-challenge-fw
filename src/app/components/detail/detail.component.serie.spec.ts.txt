import { ComponentFixture, TestBed, fakeAsync } from '@angular/core/testing';
import { ActivatedRoute, Params } from '@angular/router';
import { of } from 'rxjs';
import { DataService } from 'src/app/services/data.service';
import { DetailComponent } from './detail.component';
import { NavbarComponent } from '../navbar/navbar.component';
import { FooterComponent } from '../footer/footer.component';

describe('DetailComponent', () => {
  let component: DetailComponent;
  let fixture: ComponentFixture<DetailComponent>;
  let dataService: DataService;
  let route: ActivatedRoute;

  const mockSerieData = {
    "adult": false,
    "backdrop_path": "/q3jHCb4dMfYF6ojikKuHd6LscxC.jpg",
    "created_by": [
        {
            "id": 2094567,
            "credit_id": "6001713e7390c0003df730af",
            "name": "Michael Waldron",
            "gender": 2,
            "profile_path": "/5d6wkYnJgkVAzThqnnwOLNDzACM.jpg"
        }
    ],
    "episode_run_time": [
        52
    ],
    "first_air_date": "2021-06-09",
    "genres": [
        {
            "id": 18,
            "name": "Drama"
        },
        {
            "id": 10765,
            "name": "Sci-Fi & Fantasy"
        }
    ],
    "homepage": "https://www.disneyplus.com/series/wp/6pARMvILBGzF",
    "id": 84958,
    "in_production": true,
    "languages": [
        "en"
    ],
    "last_air_date": "2023-10-26",
    "last_episode_to_air": {
        "id": 4447781,
        "name": "Heart of the TVA",
        "overview": "The TVA's Loom nears catastrophic failure but Loki, Mobius and Sylvie have a He Who Remains variant.",
        "vote_average": 7.1,
        "vote_count": 21,
        "air_date": "2023-10-26",
        "episode_number": 4,
        "episode_type": "standard",
        "production_code": "",
        "runtime": 51,
        "season_number": 2,
        "show_id": 84958,
        "still_path": "/4vHnLqyYC4nPF7jgsEmAOVSVGfr.jpg"
    },
    "name": "Loki",
    "next_episode_to_air": {
        "id": 4447782,
        "name": "Episode 5",
        "overview": "",
        "vote_average": 0,
        "vote_count": 0,
        "air_date": "2023-11-02",
        "episode_number": 5,
        "episode_type": "standard",
        "production_code": "",
        "runtime": null,
        "season_number": 2,
        "show_id": 84958,
        "still_path": null
    },
    "networks": [
        {
            "id": 2739,
            "logo_path": "/uzKjVDmQ1WRMvGBb7UNRE0wTn1H.png",
            "name": "Disney+",
            "origin_country": ""
        }
    ],
    "number_of_episodes": 12,
    "number_of_seasons": 2,
    "origin_country": [
        "US"
    ],
    "original_language": "en",
    "original_name": "Loki",
    "overview": "After stealing the Tesseract during the events of “Avengers: Endgame,” an alternate version of Loki is brought to the mysterious Time Variance Authority, a bureaucratic organization that exists outside of time and space and monitors the timeline. They give Loki a choice: face being erased from existence due to being a “time variant” or help fix the timeline and stop a greater threat.",
    "popularity": 2216.478,
    "poster_path": "/voHUmluYmKyleFkTu3lOXQG702u.jpg",
    "production_companies": [
        {
            "id": 420,
            "logo_path": "/hUzeosd33nzE5MCNsZxCGEKTXaQ.png",
            "name": "Marvel Studios",
            "origin_country": "US"
        },
        {
            "id": 176762,
            "logo_path": null,
            "name": "Kevin Feige Productions",
            "origin_country": "US"
        }
    ],
    "production_countries": [
        {
            "iso_3166_1": "US",
            "name": "United States of America"
        }
    ],
    "seasons": [
        {
            "air_date": "2021-06-09",
            "episode_count": 6,
            "id": 114355,
            "name": "Season 1",
            "overview": "Loki, the God of Mischief, steps out of his brother's shadow to embark on an adventure that takes place after the events of \"Avengers: Endgame.\"",
            "poster_path": "/ciAfVxYhRfttiitTHZ7LcVr0WIT.jpg",
            "season_number": 1,
            "vote_average": 7.8
        },
        {
            "air_date": "2023-10-05",
            "episode_count": 6,
            "id": 341180,
            "name": "Season 2",
            "overview": "In the aftermath of Season 1, Loki finds himself in a battle for the soul of the Time Variance Authority. Along with Mobius, Hunter B-15 and a team of new and returning characters, Loki navigates an ever-expanding and increasingly dangerous multiverse in search of Sylvie, Judge Renslayer, Miss Minutes and the truth of what it means to possess free will and glorious purpose.",
            "poster_path": "/lnWJtG3vmbU7dNJrYfGk08oMAX.jpg",
            "season_number": 2,
            "vote_average": 7.5
        }
    ],
    "spoken_languages": [
        {
            "english_name": "English",
            "iso_639_1": "en",
            "name": "English"
        }
    ],
    "status": "Returning Series",
    "tagline": "Loki's time has come.",
    "type": "Scripted",
    "vote_average": 8.164,
    "vote_count": 10411
  }
  
  beforeEach(() => {
    TestBed.configureTestingModule({
      declarations: [DetailComponent, NavbarComponent, FooterComponent],
      providers: [
        {
          provide: DataService,
          useValue: {
            getFilmById: () => of(mockSerieData),
          },
        },
        {
          provide: ActivatedRoute,
          useValue: {
            queryParams: of({ id: '1', type: '0' } as Params),
          },
        },
      ],
    });
    fixture = TestBed.createComponent(DetailComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
    dataService = TestBed.inject(DataService);
    route = TestBed.inject(ActivatedRoute);
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  it('should initialize component properties of a serie detail', () => {

    expect(component.poster).toBe('url(\'https:\/\/image.tmdb.org/t/p/w342'+mockSerieData.poster_path+'\')');
    expect(component.backdrop).toBe('url(\'https:\/\/image.tmdb.org/t/p/w780'+mockSerieData.backdrop_path+'\')');
    expect(component.title).toBe(mockSerieData.name);
    expect(component.year).toBe(component.getYearOfDate(mockSerieData.first_air_date));
    expect(component.vote_average).toBe(mockSerieData.vote_average);
    expect(component.vote_count).toBe(mockSerieData.vote_count);
    expect(component.genres).toEqual([
        {
            "id": 18,
            "name": "Drama"
        },
        {
            "id": 10765,
            "name": "Sci-Fi & Fantasy"
        }
      ]
    );
    expect(component.overview).toBe(mockSerieData.overview);
  });

  // // it('should initialize the properties (well done)', () => {
  // //   fixture.detectChanges();
  // //   expect(component.poster).toBeDefined();
  // //   expect(component.backdrop).toBeDefined();
  // //   expect(component.title).toBeDefined();
  // //   expect(component.year).toBeDefined();
  // //   expect(component.date).toBeDefined();
  // //   expect(component.vote_average).toBeDefined();
  // //   expect(component.vote_count).toBeDefined();
  // //   expect(component.genres).toBeDefined();
  // //   expect(component.overview).toBeDefined();
  // // });

  // it('should call DataService with the params for a film', () => {
  //   const getFilmByIdSpy = spyOn(dataService, 'getFilmById').and.callThrough();
  //   fixture.detectChanges();
  //   expect(getFilmByIdSpy).toHaveBeenCalledWith(976573, '0');
  // });

  // it('should calculate the year from date', () => {
  //   const year = component.getYearOfDate('2022-01-01');
  //   expect(year).toBe(2022);
  // });
});
